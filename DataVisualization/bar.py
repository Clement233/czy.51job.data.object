from pyecharts.charts import Barimport DataAnalysis.barDataimport DataPretreatment.reOutliersdef size_bar():    bar = Bar(dict(width='1200px'))    bar.add_xaxis(DataAnalysis.barData.bardate())    bar.add_yaxis("8月招聘人数",                  [None if i == 0 else i for i in [int(i) for i in DataPretreatment.reOutliers.dataoutliers('08')]],                  gap="60%")    bar.add_yaxis("9月招聘人数",                  [None if i == 0 else i for i in [int(i) for i in DataPretreatment.reOutliers.dataoutliers('09')]],                  gap="60%")    bar.add_yaxis("10月招聘人数",                  [None if i == 0 else i for i in [int(i) for i in DataPretreatment.reOutliers.dataoutliers('10')]],                  gap="60%")    # render 会生成本地 HTML 文件，默认会在当前目录生成 render.html 文件    # 也可以传入路径参数，如 bar.render("mycharts.html")    # bar.render('bar.html')    return bar